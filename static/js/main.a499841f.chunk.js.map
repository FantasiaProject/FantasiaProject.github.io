{"version":3,"sources":["Components/LoginComponent.js","Components/AddAssignmentPopUp.js","Components/ValidateTokensPopUp.js","Components/ExpansionPanelCustom.js","Components/AntAccordion.js","Components/CustomToolbar.js","Components/SignIn.js","Components/StudentSubmission.js","Components/DiffView.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","Option","es_select","ValidateTokensPopUp","state","visible","showModal","_this","setState","handleOk","e","handleCancel","handleNameChange","AssignmentName","target","value","react_default","a","createElement","es_button","id","type","onClick","this","modal","title","onOk","onCancel","onChange","withStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","props","classes","className","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Typography_default","ExpansionPanelDetails_default","disabled","data","cloneCount","Panel","collapse","callback","key","console","log","AntAccordion","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","card","style","header","list","itemLayout","dataSource","renderItem","item","Item","Meta","avatar","src","description","conditionalRender","CustomToolbar","ProgrammingLanguage","handleClick","PassUpPopUpInformation","handleLanguageChange","Fragment","Tooltip_default","IconButton_default","iconButton","Add_default","CustomToolbar_Option","name","main","defineProperty","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","concat","margin","backgroundColor","palette","secondary","form","submit","CssBaseline_default","Paper_default","Avatar_default","LockOutlined_default","component","variant","FormControl_default","required","fullWidth","InputLabel_default","htmlFor","Input_default","autoComplete","autoFocus","Button_default","color","class","cloneCodeA","StudentCodeA","App","PureComponent","showState","prevState","toConsumableArray","getCurrentDate","AssignmentData","AssignmentOptions","selectableRows","print","rowsPerPage","customFooter","count","page","changeRowsPerPage","changePage","options","objectSpread","TableFooter_default","TableRow_default","ValidateTokensPopUp_ValidateTokensPopUp","TablePagination_default","onChangePage","_","onChangeRowsPerPage","event","rowsPerPageOptions","onRowsSelect","rowsSelected","allRows","onRowsDelete","rowsDeleted","numberRows","onSearchChange","searchText","onColumnSortChange","column","direction","onColumnViewChange","action","onFilterChange","filters","onCellClick","cellIndex","rowIndex","customToolbar","Components_CustomToolbar","separator","arguments","length","undefined","newDate","Date","date","getDate","month","getMonth","year","getFullYear","AntAccordion_AntAccordion","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+SAU4CA,IAAMC,0DCL5CC,EAASC,EAAA,EAAOD,UAQ0BF,IAAMC,4ECLjCG,6MACjBC,MAAQ,CACJC,SAAS,KAGbC,UAAY,WACRC,EAAKC,SAAS,CACVH,SAAS,OAIjBI,SAAW,SAACC,GACRH,EAAKC,SAAS,CACVH,SAAS,OAIjBM,aAAe,SAACD,GACZH,EAAKC,SAAS,CACVH,SAAS,OAIjBO,iBAAmB,SAACF,GAChBH,EAAKC,SACD,CAACK,eAAgBH,EAAEI,OAAOC,iFAK9B,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAAC,EAAA,GAAQC,GAAG,uBAAuBC,KAAK,UAAUC,QAASC,KAAKjB,WAA/D,8BACAU,EAAAC,EAAAC,cAAAM,EAAA,GACIC,MAAM,6BACNpB,QAASkB,KAAKnB,MAAMC,QACpBqB,KAAMH,KAAKd,SACXkB,SAAUJ,KAAKZ,cAJnB,mBAMoBK,EAAAC,EAAAC,cAAA,SAAOE,GAAG,aAAaC,KAAK,OAAOO,SAAUL,KAAKX,4BAvCrCb,IAAMC,wGC4FxC6B,qBA3FA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,MAAO,QAEXC,QAAS,CACLC,SAAUJ,EAAMK,WAAWC,QAAQ,IACnCC,WAAYP,EAAMK,WAAWG,qBAqFtBT,CAhFf,SAA8BU,GAAO,IACzBC,EAAYD,EAAZC,QACR,OACIxB,EAAAC,EAAAC,cAAA,OAAKuB,UAAWD,EAAQT,MACpBf,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB2B,WAAY5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYwB,UAAWD,EAAQP,SAA/B,mBAEJjB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACID,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB2B,WAAY5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYwB,UAAWD,EAAQP,SAA/B,sBAEJjB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACID,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB2B,WAAY5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYwB,UAAWD,EAAQP,SAA/B,qBAEJjB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACID,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,uIAMRD,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB2B,WAAY5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYwB,UAAWD,EAAQP,SAA/B,qBAEJjB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACID,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,0IASpBD,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB2B,WAAY5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYwB,UAAWD,EAAQP,SAA/B,sBAEJjB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACID,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,0IAUpBD,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,KACID,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB2B,WAAY5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYwB,UAAWD,EAAQP,SAA/B,sBAEJjB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,KACID,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,uIAMRD,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAgB+B,UAAQ,GACpBhC,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAuB2B,WAAY5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,OAC/BD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYwB,UAAWD,EAAQP,SAA/B,wCAWLJ,iDC7FToB,UAAO,CACT,CACIxB,MAAO,mBACPyB,WAAY,MAEhB,CACIzB,MAAO,mBACPyB,WAAY,OAEhB,CACIzB,MAAO,mBACPyB,WAAY,MAEhB,CACIzB,MAAO,mBACPyB,WAAY,KAEhB,CACIzB,MAAO,mBACPyB,WAAY,OAIdC,EAAQC,EAAA,EAASD,MAEvB,SAASE,EAASC,GACdC,QAAQC,IAAIF,GAgChB,IAEqBG,cAEjB,SAAAA,EAAYlB,GAAQ,OAAAmB,OAAAC,EAAA,EAAAD,CAAAnC,KAAAkC,GAAAC,OAAAE,EAAA,EAAAF,CAAAnC,KAAAmC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAvC,KACVgB,0EAIN,OACIvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA6C,EAAA,GAAMC,MAAO,CAAEhC,MAAO,MACtBhB,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,iGAGJF,EAAAC,EAAAC,cAAAkC,EAAA,GAAUxB,SAAUyB,GAChBrC,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,wCAAwCX,IAAI,gBAAgBlC,GAAG,iBACzEJ,EAAAC,EAAAC,cAAAkC,EAAA,OACIpC,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,0CAA0CX,IAAI,oBAAoBlC,GAAG,qBAC/EJ,EAAAC,EAAAC,cAAAkC,EAAA,OACIpC,EAAAC,EAAAC,cAAAgD,EAAA,GACIC,WAAW,aACXC,WAAYnB,EACZoB,WAAY,SAAAC,GAAI,OAxDxD,SAA2BA,GACvB,OAAIA,EAAKpB,WAAa,IAEdlC,EAAAC,EAAAC,cAAAgD,EAAA,EAAMK,KAAN,KACIvD,EAAAC,EAAAC,cAAAgD,EAAA,EAAMK,KAAKC,KAAX,CACIC,OACIzD,EAAAC,EAAAC,cAAAuD,EAAA,GACIC,IAAI,2NAEZjD,MAAOT,EAAAC,EAAAC,cAAA,SAAIoD,EAAK7C,OAChBkD,YAAaL,EAAKpB,WAAa,mBAMvClC,EAAAC,EAAAC,cAAAgD,EAAA,EAAMK,KAAN,KACIvD,EAAAC,EAAAC,cAAAgD,EAAA,EAAMK,KAAKC,KAAX,CACIC,OACIzD,EAAAC,EAAAC,cAAAuD,EAAA,QAEJhD,MAAOT,EAAAC,EAAAC,cAAA,SAAIoD,EAAK7C,OAChBkD,YAAaL,EAAKpB,WAAa,mBAkCS0B,CAAkBN,QAIlDtD,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,0CAA0CX,IAAI,oBAAoBlC,GAAG,sBACnFJ,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,0CAA0CX,IAAI,oBAAoBlC,GAAG,sBACnFJ,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,0CAA0CX,IAAI,oBAAoBlC,GAAG,sBACnFJ,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,0CAA0CX,IAAI,oBAAoBlC,GAAG,sBACnFJ,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,0CAA0CX,IAAI,oBAAoBlC,GAAG,sBACnFJ,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,0CAA0CX,IAAI,oBAAoBlC,GAAG,wBAK3FJ,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,sCAAsCX,IAAI,mBAAmBlC,GAAG,oBAC1EJ,EAAAC,EAAAC,cAAA,SA1Cd,UA4CUF,EAAAC,EAAAC,cAACiC,EAAD,CAAOc,OAAO,QAAQX,IAAI,QAAQlC,GAAG,SACjCJ,EAAAC,EAAAC,cAAA,SA7Cd,mBAEgCnB,IAAMC,gEC1D1CC,EAASC,EAAA,EAAOD,OAOhB4E,6MACFzE,MAAQ,CACJC,SAAS,EACTQ,eAAgB,GAChBiE,oBAAqB,MAGzBC,YAAc,WACVxE,EAAKC,SAAS,CACVH,SAAQ,EACRQ,eAAgB,GAChBiE,oBAAqB,QAI7BrE,SAAW,SAACC,GAC0B,KAA9BH,EAAKH,MAAMS,gBAA4D,KAAnCN,EAAKH,MAAM0E,sBAC/CvE,EAAKC,SAAS,CACVH,SAAS,IAEbE,EAAKgC,MAAMyC,uBAAuBzE,EAAKH,MAAMS,eAAgBN,EAAKH,MAAM0E,qBACxEvB,QAAQC,IAAIjD,EAAKH,WAIzBO,aAAe,SAACD,GACZH,EAAKC,SAAS,CACVH,SAAS,OAIjBO,iBAAmB,SAACF,GAChBH,EAAKC,SACD,CAACK,eAAgBH,EAAEI,OAAOC,WAIlCkE,qBAAuB,SAAClE,GACpBR,EAAKC,SACD,CAACsE,oBAAqB/D,6EAIrB,IACGyB,EAAYjB,KAAKgB,MAAjBC,QAGR,OAFAe,QAAQC,IAAI,UAAWhB,GAGnBxB,EAAAC,EAAAC,cAACF,EAAAC,EAAMiE,SAAP,KACIlE,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CAASQ,MAAO,kBACZT,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CAAYwB,UAAWD,EAAQ6C,WAAY/D,QAASC,KAAKwD,aACrD/D,EAAAC,EAAAC,cAACoE,EAAArE,EAAD,QAIRD,EAAAC,EAAAC,cAAAM,EAAA,GACIC,MAAM,oBACNpB,QAASkB,KAAKnB,MAAMC,QACpBqB,KAAMH,KAAKd,SACXkB,SAAUJ,KAAKZ,cAJnB,qBAMsBK,EAAAC,EAAAC,cAAA,SACdE,GAAG,sBACHL,MAAOQ,KAAKnB,MAAMS,eAClBe,SAAUL,KAAKX,mBAGnBI,EAAAC,EAAAC,cAAA,OAAKuB,UAAU,gCAAf,yBAEIzB,EAAAC,EAAAC,cAAAhB,EAAA,GAAQa,MAAOQ,KAAKnB,MAAM0E,oBAClB1D,GAAG,oBACH4C,MAAO,CAAEhC,MAAO,KAChBJ,SAAUL,KAAK0D,sBACnBjE,EAAAC,EAAAC,cAACqE,EAAD,CAAQnE,GAAG,OAAOL,MAAM,QAAxB,QACAC,EAAAC,EAAAC,cAACqE,EAAD,CAAQnE,GAAG,IAAIL,MAAM,KAArB,gBA1EAhB,IAAMC,WAoFnB6B,uBAzFc,CACzBwD,WAAY,IAwFgC,CAAEG,KAAM,iBAAzC3D,CAA4DgD,gMCE5DhD,KAlFA,SAAAC,GAAK,MAAK,CACrB2D,KAAK/B,OAAAgC,EAAA,EAAAhC,CAAA,CACD1B,MAAO,OACP2D,QAAS,QACTC,WAAiC,EAArB9D,EAAM+D,QAAQC,KAC1BC,YAAkC,EAArBjE,EAAM+D,QAAQC,MAC1BhE,EAAMkE,YAAYC,GAAG,IAA2B,EAArBnE,EAAM+D,QAAQC,KAAW,GAAK,CACtD9D,MAAO,IACP4D,WAAY,OACZG,YAAa,SAGrBG,MAAO,CACHC,UAAgC,EAArBrE,EAAM+D,QAAQC,KACzBH,QAAS,OACTS,cAAe,SACfC,WAAY,SACZC,QAAO,GAAAC,OAA0B,EAArBzE,EAAM+D,QAAQC,KAAnB,OAAAS,OAAsD,EAArBzE,EAAM+D,QAAQC,KAA/C,OAAAS,OAAkF,EAArBzE,EAAM+D,QAAQC,KAA3E,OAEXrB,OAAQ,CACJ+B,OAAQ1E,EAAM+D,QAAQC,KACtBW,gBAAiB3E,EAAM4E,QAAQC,UAAUlB,MAE7CmB,KAAM,CACF5E,MAAO,OACPmE,UAAWrE,EAAM+D,QAAQC,MAE7Be,OAAQ,CACJV,UAAgC,EAArBrE,EAAM+D,QAAQC,QAsDlBjE,CAlDf,SAAgBU,GAAO,IACXC,EAAYD,EAAZC,QAER,OACIxB,EAAAC,EAAAC,cAAA,QAAMuB,UAAWD,EAAQiD,MACrBzE,EAAAC,EAAAC,cAAC4F,GAAA7F,EAAD,MACAD,EAAAC,EAAAC,cAAC6F,GAAA9F,EAAD,CAAOwB,UAAWD,EAAQ0D,OACtBlF,EAAAC,EAAAC,cAAC8F,GAAA/F,EAAD,CAAQwB,UAAWD,EAAQiC,QACvBzD,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,OAEJD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYiG,UAAU,KAAKC,QAAQ,MAAnC,2BAGAnG,EAAAC,EAAAC,cAAA,QAAMuB,UAAWD,EAAQoE,MACrB5F,EAAAC,EAAAC,cAACkG,GAAAnG,EAAD,CAAauF,OAAO,SAASa,UAAQ,EAACC,WAAS,GAC3CtG,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,CAAYuG,QAAQ,YAApB,aACAxG,EAAAC,EAAAC,cAACuG,GAAAxG,EAAD,CAAOG,GAAG,WAAWoE,KAAK,WAAWkC,aAAa,WAAWC,WAAS,KAE1E3G,EAAAC,EAAAC,cAACkG,GAAAnG,EAAD,CAAauF,OAAO,SAASa,UAAQ,EAACC,WAAS,GAC3CtG,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,CAAYuG,QAAQ,YAApB,YACAxG,EAAAC,EAAAC,cAACuG,GAAAxG,EAAD,CAAOuE,KAAK,WAAWnE,KAAK,WAAWD,GAAG,WAAWsG,aAAa,sBAEtE1G,EAAAC,EAAAC,cAAC0G,GAAA3G,EAAD,CACII,KAAK,SACLiG,WAAS,EACTH,QAAQ,YACRU,MAAM,UACNpF,UAAWD,EAAQqE,QALvB,WASA7F,EAAAC,EAAAC,cAAC0G,GAAA3G,EAAD,CACII,KAAK,SACLiG,WAAS,EACTH,QAAQ,YACRU,MAAM,UACNpF,UAAWD,EAAQqE,QALvB,gBCOLhF,KAtEA,SAAAC,GAAK,MAAK,CACrB2D,KAAK/B,OAAAgC,EAAA,EAAAhC,CAAA,CACD1B,MAAO,OACP2D,QAAS,QACTC,WAAiC,EAArB9D,EAAM+D,QAAQC,KAC1BC,YAAkC,EAArBjE,EAAM+D,QAAQC,MAC1BhE,EAAMkE,YAAYC,GAAG,IAA2B,EAArBnE,EAAM+D,QAAQC,KAAW,GAAK,CACtD9D,MAAO,IACP4D,WAAY,OACZG,YAAa,SAGrBG,MAAO,CACHC,UAAgC,EAArBrE,EAAM+D,QAAQC,KACzBH,QAAS,OACTS,cAAe,SACfC,WAAY,SACZC,QAAO,GAAAC,OAA0B,EAArBzE,EAAM+D,QAAQC,KAAnB,OAAAS,OAAsD,EAArBzE,EAAM+D,QAAQC,KAA/C,OAAAS,OAAkF,EAArBzE,EAAM+D,QAAQC,KAA3E,OAEXrB,OAAQ,CACJ+B,OAAQ1E,EAAM+D,QAAQC,KACtBW,gBAAiB3E,EAAM4E,QAAQC,UAAUlB,MAE7CmB,KAAM,CACF5E,MAAO,OACPmE,UAAWrE,EAAM+D,QAAQC,MAE7Be,OAAQ,CACJV,UAAgC,EAArBrE,EAAM+D,QAAQC,QA0ClBjE,CAtCf,SAA2BU,GAAO,IACtBC,EAAYD,EAAZC,QAER,OACIxB,EAAAC,EAAAC,cAAA,QAAMuB,UAAWD,EAAQiD,MACrBzE,EAAAC,EAAAC,cAAC4F,GAAA7F,EAAD,MACAD,EAAAC,EAAAC,cAAC6F,GAAA9F,EAAD,CAAOwB,UAAWD,EAAQ0D,OACtBlF,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAYiG,UAAU,KAAKC,QAAQ,MAAnC,qCAGAnG,EAAAC,EAAAC,cAAA,QAAMuB,UAAWD,EAAQoE,MACrB5F,EAAAC,EAAAC,cAACkG,GAAAnG,EAAD,CAAauF,OAAO,SAASa,UAAQ,EAACC,WAAS,GAC3CtG,EAAAC,EAAAC,cAACqG,GAAAtG,EAAD,CAAYuG,QAAQ,YAApB,aACAxG,EAAAC,EAAAC,cAACuG,GAAAxG,EAAD,CAAOG,GAAG,WAAWoE,KAAK,WAAWmC,WAAS,KAElD3G,EAAAC,EAAAC,cAACkG,GAAAnG,EAAD,CAAauF,OAAO,SAASa,UAAQ,EAACC,WAAS,GAC3CtG,EAAAC,EAAAC,cAAA,SAAOsG,QAAQ,QAAf,wBACAxG,EAAAC,EAAAC,cAACuG,GAAAxG,EAAD,CAAOuE,KAAK,OAAOnE,KAAK,OAAOyG,MAAM,oBAAoB1G,GAAG,UAEhEJ,EAAAC,EAAAC,cAAC0G,GAAA3G,EAAD,CACII,KAAK,SACLiG,WAAS,EACTH,QAAQ,YACRU,MAAM,UACNpF,UAAWD,EAAQqE,QALvB,eAmBLhF,yBCjETkG,GAAU,g/FA6FVC,GAAY,giHCiGHC,IDUuBC,4BCtJpC,SAAAD,EAAY1F,GAAO,IAAAhC,EAAA,OAAAmD,OAAAC,EAAA,EAAAD,CAAAnC,KAAA0G,IACjB1H,EAAAmD,OAAAE,EAAA,EAAAF,CAAAnC,KAAAmC,OAAAG,EAAA,EAAAH,CAAAuE,GAAAnE,KAAAvC,KAAMgB,KAqHR4F,UAAY,WACV5E,QAAQC,IAAIjD,EAAKH,QAvHAG,EA2HnByE,uBAAyB,SAACnE,EAAgBiE,GAGxCvE,EAAKC,SAAS,SAAA4H,GAAS,MAAK,CAC1BnF,KAAI,GAAAsD,OAAA7C,OAAA2E,EAAA,EAAA3E,CAAM0E,EAAUnF,MAAhB,CAAsB,CAACpC,EAAgB,EAAGN,EAAK+H,iBAAkBxD,SA5HvEvE,EAAKH,MAAQ,CACX6C,KAAM,CACJ,CAAC,eAAgB,EAAG,aAAc,KAClC,CAAC,eAAgB,IAAK,aAAc,KACpC,CAAC,eAAgB,IAAK,aAAc,QACpC,CAAC,eAAgB,IAAK,aAAc,KACpC,CAAC,eAAgB,IAAK,aAAc,KACpC,CAAC,eAAgB,IAAK,aAAc,KACpC,CAAC,eAAgB,IAAK,aAAc,QACpC,CAAC,eAAgB,IAAK,aAAc,QACpC,CAAC,eAAgB,IAAK,aAAc,KACpC,CAAC,eAAgB,IAAK,aAAc,QACpC,CAAC,eAAgB,IAAK,aAAc,KACpC,CAAC,eAAgB,IAAK,aAAc,KACpC,CAAC,eAAgB,IAAK,aAAc,MAGtCsF,eAAgB,CAChB,CAAC,SAAUvH,EAAAC,EAAAC,cAAAuD,EAAA,GAAQC,IAAI,2NAA4N,IAAS,QAC5P,CAAC,YAAY,EAAO,IAAK,UAGzB8D,kBAAmB,CACjBC,gBAAgB,EAChBC,OAAM,EACNC,YAAY,GAGZC,aAAc,SAACC,EAAOC,EAAMH,EAAaI,EAAmBC,GAG1D,GAAIzI,EAAKH,MAAMoI,kBAAkBG,cAAgBA,EAAa,CAC5D,IAAIM,EAAOvF,OAAAwF,EAAA,EAAAxF,CAAA,GAAOnD,EAAKH,MAAMoI,mBAC7BS,EAAQN,YAAcA,EACtBpI,EAAKC,SAAS,CAACgI,kBAAoBS,IAGrC,OACIjI,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,KACED,EAAAC,EAAAC,cAACkI,EAAAnI,EAAD,KACED,EAAAC,EAAAC,cAACmI,EAAD,MACArI,EAAAC,EAAAC,cAACoI,EAAArI,EAAD,CACI4H,MAAOA,EACPF,YAAaA,EACbG,KAAMA,EACNS,aAAc,SAACC,EAAGV,GAAJ,OAAaE,EAAWF,IACtCW,oBAAqB,SAAAC,GAAK,OAAIX,EAAkBW,EAAM5I,OAAOC,QAC7D4I,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,WASxDV,QAAS,CACPP,OAAM,EACNkB,aAAc,SAACC,EAAcC,GAC3BvG,QAAQC,IAAIqG,EAAcC,IAE5BC,aAAc,SAAAC,GACZzG,QAAQC,IAAIwG,EAAa,kBAE3BT,aAAc,SAAAU,GACZ1G,QAAQC,IAAIyG,IAEdC,eAAgB,SAAAC,GACd5G,QAAQC,IAAI2G,IAEdC,mBAAoB,SAACC,EAAQC,GAC3B/G,QAAQC,IAAI6G,EAAQC,IAEtBC,mBAAoB,SAACF,EAAQG,GAC3BjH,QAAQC,IAAI6G,EAAQG,IAEtBC,eAAgB,SAACJ,EAAQK,GACvBnH,QAAQC,IAAI6G,EAAQK,IAEtBC,YAAa,SAACC,EAAWC,GACvBtH,QAAQC,IAAIoH,EAAWC,IAEzBC,cAAgB,kBAAM9J,EAAAC,EAAAC,cAAC6J,EAAD,CAAe/F,uBAAwBzE,EAAKyE,0BAElE2D,YAAY,GAGZC,aAAc,SAACC,EAAOC,EAAMH,EAAaI,EAAmBC,GAG1D,GAAIzI,EAAKH,MAAM6I,QAAQN,cAAgBA,EAAa,CAClD,IAAIM,EAAOvF,OAAAwF,EAAA,EAAAxF,CAAA,GAAOnD,EAAKH,MAAM6I,SAC7BA,EAAQN,YAAcA,EACtBpI,EAAKC,SAAS,CAACyI,QAAUA,IAG3B,OACIjI,EAAAC,EAAAC,cAACiI,EAAAlI,EAAD,KACED,EAAAC,EAAAC,cAACkI,EAAAnI,EAAD,KACED,EAAAC,EAAAC,cAACoI,EAAArI,EAAD,CACI4H,MAAOA,EACPF,YAAaA,EACbG,KAAMA,EACNS,aAAc,SAACC,EAAGV,GAAJ,OAAaE,EAAWF,IACtCW,oBAAqB,SAAAC,GAAK,OAAIX,EAAkBW,EAAM5I,OAAOC,QAC7D4I,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,YA5GzCpJ,gFAVU,IAAdyK,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,IAEnBG,EAAU,IAAIC,KACdC,EAAOF,EAAQG,UACfC,EAAQJ,EAAQK,WAAa,EAC7BC,EAAON,EAAQO,cAEnB,SAAApF,OAAUmF,GAAVnF,OAAiByE,GAAjBzE,OAA6BiF,EAAM,GAAN,IAAAjF,OAAaiF,GAAb,GAAAjF,OAAwBiF,IAArDjF,OAA+DyE,GAA/DzE,OAA2E+E,qDAuI3E,OACItK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0K,EAAD,cAnJQ5L,cClDE6L,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnL,EAAAC,EAAAC,cAACkL,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a499841f.chunk.js","sourcesContent":["import React from \"react\";\n\n/*\nHandles the login action (provides buttons and inputs for related actions).\nComponent takes no props.\n\nState is:\n- userName: contains a string of the username that has been currently entered\n- password: contains a string of the password that has been currently entered\n */\nexport default class LoginComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            password: '',\n        };\n    }\n\n    onClickSignUp = () => {\n        alert(\"clicked sign up with values: username=\" + this.state.userName + \" password=\" + this.state.password);\n    };\n    onClickSignIn = () =>  {\n        alert(\"clicked sign in with values: username=\" + this.state.userName + \" password=\" + this.state.password);\n    };\n\n    updateUserName = (e) =>  {\n        this.setState({\n            userName: e.target.value\n        });\n    };\n\n    updatePassword = (e) =>  {\n        this.setState({\n            password: e.target.value\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"LoginComponent\">\n                <h1>Welcome to Fantasia!</h1>\n\n                <div className=\"UserNameSegment\">\n                    <text>UserName: </text>\n                    <input id=\"UserNameInput\" value={this.state.userName} onChange={e => this.updateUserName(e)} />\n                </div>\n                <div className=\"PasswordSegment\">\n                    <text>Password: </text>\n                    <input id=\"PasswordInput\" value={this.state.password} onChange={e => this.updatePassword(e)}  />\n                </div>\n\n                <div className=\"ButtonGroup\">\n                    <button id=\"SignUpButton\" onClick={this.onClickSignUp}>Sign Up</button>\n                    <button id=\"SignInButton\" onClick={this.onClickSignIn}>Sign In</button>\n                </div>\n            </div>\n        );\n    }\n}","import { Modal, Button } from 'antd';\nimport React from \"react\";\nimport { Select } from 'antd';\n\n\nconst Option = Select.Option;\n\n/*\n* The modal popup for adding an assignment\n*\n* Props contain a function called PassUpPopUpInformation that takes the assignment name\n* and programming language of a successful addition and updates the table\n* */\nexport default class AddAssignmentPopUp extends React.Component {\n    state = {\n        visible: false,\n        AssignmentName: '',\n        ProgrammingLanguage: ''\n    };\n\n    constructor(props) {\n        super(props);\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = (e) => {\n        if (this.state.AssignmentName !== \"\" && this.state.ProgrammingLanguage !== \"\") {\n            this.setState({\n                visible: false,\n            });\n            this.props.PassUpPopUpInformation(this.state.AssignmentName, this.state.ProgrammingLanguage);\n        }\n    };\n\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleNameChange = (e) => {\n        this.setState(\n            {AssignmentName: e.target.value}\n        );\n    };\n\n    handleLanguageChange = (value) => {\n        this.setState(\n            {ProgrammingLanguage: value}\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Button id=\"AddAssignment\" type=\"primary\" icon=\"plus\" onClick={this.showModal}/>\n                <Modal\n                    title=\"Add an Assignment\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    Assignment Name : <input id=\"AssignmentNameInput\" onChange={this.handleNameChange}/>\n\n                    <div className=\"ProgrammingLanguageSelection\">\n                        Programming Language :\n                        <Select id=\"LanguageSelection\" style={{ width: 120 }} onChange={this.handleLanguageChange}>\n                            <Option id=\"Java\" value=\"Java\">Java</Option>\n                            <Option id=\"C\" value=\"C\">C</Option>\n                        </Select>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}","import { Modal, Button } from 'antd';\nimport React from \"react\";\n\n/*\n* The modal popup for validating tokens\n*\n* Props are empty\n* */\nexport default class ValidateTokensPopUp extends React.Component {\n    state = {\n        visible: false,\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = (e) => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = (e) => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleNameChange = (e) => {\n        this.setState(\n            {AssignmentName: e.target.value}\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Button id=\"ValidateTokensButton\" type=\"primary\" onClick={this.showModal}>Validate Assignment Tokens</Button>\n                <Modal\n                    title=\"Validate Assignment Tokens\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    Token zip file: <input id=\"TokenInput\" type=\"file\" onChange={this.handleNameChange}/>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n});\n\n//currently UNUSED\nfunction SimpleExpansionPanel(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.root}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.heading}>General Corpus</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <div>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                <Typography className={classes.heading}>StudentFileA.java</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <div>\n                                    <ExpansionPanel>\n                                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                            <Typography className={classes.heading}>ClonedFileA.java</Typography>\n                                        </ExpansionPanelSummary>\n                                        <ExpansionPanelDetails>\n                                            <Typography>\n                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                                                sit amet blandit leo lobortis eget.\n                                            </Typography>\n                                        </ExpansionPanelDetails>\n                                    </ExpansionPanel>\n                                    <ExpansionPanel>\n                                        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                            <Typography className={classes.heading}>ClonedFileB.java</Typography>\n                                        </ExpansionPanelSummary>\n                                        <ExpansionPanelDetails>\n                                            <Typography>\n                                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                                                sit amet blandit leo lobortis eget.\n                                            </Typography>\n                                        </ExpansionPanelDetails>\n                                    </ExpansionPanel>\n                                </div>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel>\n                            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                                <Typography className={classes.heading}>StudentFileB.java</Typography>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                                    sit amet blandit leo lobortis eget.\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </div>\n\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.heading}>Expansion Panel 2</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                        sit amet blandit leo lobortis eget.\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel disabled>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.heading}>Disabled Expansion Panel</Typography>\n                </ExpansionPanelSummary>\n            </ExpansionPanel>\n        </div>\n    );\n}\n\nSimpleExpansionPanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleExpansionPanel);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport { Collapse } from \"antd\";\nimport { List, Avatar } from \"antd\";\nimport { Card } from 'antd';\n\nconst data = [\n    {\n        title: \"ClonedFileA.java\",\n        cloneCount: 350000\n    },\n    {\n        title: \"ClonedFileB.java\",\n        cloneCount: 125000\n    },\n    {\n        title: \"ClonedFileC.java\",\n        cloneCount: 15000\n    },\n    {\n        title: \"ClonedFileD.java\",\n        cloneCount: 8000\n    },\n    {\n        title: \"ClonedFileE.java\",\n        cloneCount: 2000\n    }\n];\n\nconst Panel = Collapse.Panel;\n\nfunction callback(key) {\n    console.log(key);\n}\n\nfunction conditionalRender(item) {\n    if (item.cloneCount > 100000) {\n        return (\n            <List.Item>\n                <List.Item.Meta\n                    avatar={\n                        <Avatar\n                            src=\"https://previews.123rf.com/images/mironovkonstantin/mironovkonstantin1804/mironovkonstantin180400089/99452926-attention-caution-danger-icon-exclamination-point-mark-in-the-red-triangle-sign-symbol-or-sticker-el.jpg\"/>\n                    }\n                    title={<a>{item.title}</a>}\n                    description={item.cloneCount + \" clone points\"}\n                />\n            </List.Item>\n        )\n    } else {\n        return (\n            <List.Item>\n                <List.Item.Meta\n                    avatar={\n                        <Avatar/>\n                    }\n                    title={<a>{item.title}</a>}\n                    description={item.cloneCount + \" clone points\"}\n                />\n            </List.Item>\n        )\n    }\n}\n\nconst text = `short`;\n\nexport default class AntAccordion extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <Card style={{ width: 30000 }}>\n                    <h2>CMPUT 201 A1</h2>\n                    <h5>StudentID: jsmith</h5>\n                    <h5>Clone Points: 1,000,000</h5>\n                    <h5>Submission Download link: http://Fantasia/5aec-96b3-1135-96e2/ea1a-6ac7-11e9-a923</h5>\n                    </Card>\n                </div>\n                <Collapse onChange={callback}>\n                    <Panel header=\"General Corpus.  999,990 clone points\" key=\"GeneralCorpus\" id=\"GeneralCorpus\">\n                        <Collapse>\n                            <Panel header=\"StudentFileA.java  500,000 clone points\" key=\"StudentFileA.java\" id=\"StudentFileA.java\">\n                                <Collapse>\n                                    <List\n                                        itemLayout=\"horizontal\"\n                                        dataSource={data}\n                                        renderItem={item => conditionalRender(item)}\n                                    />\n                                </Collapse>\n                            </Panel>\n                            <Panel header=\"StudentFileB.java  400,000 clone points\" key=\"StudentFileB.java\" id=\"StudentFileB.java\"/>\n                            <Panel header=\"StudentFileC.java   90,000 clone points\" key=\"StudentFileC.java\" id=\"StudentFileC.java\"/>\n                            <Panel header=\"StudentFileD.java    9,000 clone points\" key=\"StudentFileD.java\" id=\"StudentFileD.java\"/>\n                            <Panel header=\"StudentFileE.java      900 clone points\" key=\"StudentFileE.java\" id=\"StudentFileE.java\"/>\n                            <Panel header=\"StudentFileF.java       50 clone points\" key=\"StudentFileF.java\" id=\"StudentFileF.java\"/>\n                            <Panel header=\"StudentFileG.java       40 clone points\" key=\"StudentFileG.java\" id=\"StudentFileG.java\"/>\n\n\n                        </Collapse>\n                    </Panel>\n                    <Panel header=\"Within Assignment.  10 clone points\" key=\"WithinAssignment\" id=\"WithinAssignment\">\n                        <p>{text}</p>\n                    </Panel>\n                    <Panel header=\"JPlag\" key=\"JPlag\" id=\"JPlag\">\n                        <p>{text}</p>\n                    </Panel>\n                </Collapse>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AddAssignmentPopUp from \"../App\";\nimport {Modal, Select} from \"antd\";\nimport { Button } from 'antd';\n\nconst Option = Select.Option;\n\nconst defaultToolbarStyles = {\n    iconButton: {\n    },\n};\n\nclass CustomToolbar extends React.Component {\n    state = {\n        visible: false,\n        AssignmentName: '',\n        ProgrammingLanguage: ''\n    };\n\n    handleClick = () => {\n        this.setState({\n            visible:true,\n            AssignmentName: '',\n            ProgrammingLanguage: ''\n        })\n    };\n\n    handleOk = (e) => {\n        if (this.state.AssignmentName !== \"\" && this.state.ProgrammingLanguage !== \"\") {\n            this.setState({\n                visible: false\n            });\n            this.props.PassUpPopUpInformation(this.state.AssignmentName, this.state.ProgrammingLanguage);\n            console.log(this.state);\n        }\n    };\n\n    handleCancel = (e) => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleNameChange = (e) => {\n        this.setState(\n            {AssignmentName: e.target.value}\n        );\n    };\n\n    handleLanguageChange = (value) => {\n        this.setState(\n            {ProgrammingLanguage: value}\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n        console.log(\"classes\", classes);\n\n        return (\n            <React.Fragment>\n                <Tooltip title={\"Add Assignment\"}>\n                    <IconButton className={classes.iconButton} onClick={this.handleClick}>\n                        <AddIcon />\n                    </IconButton>\n                </Tooltip>\n\n                <Modal\n                    title=\"Add an Assignment\"\n                    visible={this.state.visible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                >\n                    Assignment Name : <input\n                        id=\"AssignmentNameInput\"\n                        value={this.state.AssignmentName}\n                        onChange={this.handleNameChange}\n                    />\n\n                    <div className=\"ProgrammingLanguageSelection\">\n                        Programming Language :\n                        <Select value={this.state.ProgrammingLanguage}\n                                id=\"LanguageSelection\"\n                                style={{ width: 120 }}\n                                onChange={this.handleLanguageChange}>\n                            <Option id=\"Java\" value=\"Java\">Java</Option>\n                            <Option id=\"C\" value=\"C\">C</Option>\n                        </Select>\n                    </div>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default withStyles(defaultToolbarStyles, { name: \"CustomToolbar\" })(CustomToolbar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n/* solution adapted from code at\nhttps://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/page-layout-examples/sign-in/SignIn.js\nby harvey56 and oliviertassinari\nfetched on April 20th, 2019\n */\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nfunction SignIn(props) {\n    const { classes } = props;\n\n    return (\n        <main className={classes.main}>\n            <CssBaseline />\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Fantasia Teacher Portal\n                </Typography>\n                <form className={classes.form}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"userName\">User Name</InputLabel>\n                        <Input id=\"userName\" name=\"userName\" autoComplete=\"userName\" autoFocus />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\n                        <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign in\n                    </Button>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign up\n                    </Button>\n                </form>\n            </Paper>\n        </main>\n    );\n}\n\nSignIn.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignIn);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n/* solution adapted from code at\nhttps://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/page-layout-examples/sign-in/SignIn.js\nby harvey56 and oliviertassinari\nfetched on April 20th, 2019\n */\nconst styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nfunction StudentSubmission(props) {\n    const { classes } = props;\n\n    return (\n        <main className={classes.main}>\n            <CssBaseline />\n            <Paper className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Submission Portal for CMPUT201 A1\n                </Typography>\n                <form className={classes.form}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"userName\">StudentID</InputLabel>\n                        <Input id=\"userName\" name=\"userName\" autoFocus />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <label htmlFor=\"file\">Submission (.tar.gz)</label>\n                        <Input name=\"file\" type=\"file\" class=\"form-control-file\" id=\"file\" />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </Paper>\n        </main>\n    );\n}\n\nStudentSubmission.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(StudentSubmission);","import React, { PureComponent } from 'react'\nimport ReactDiffViewer from 'react-diff-viewer'\nimport { Modal, Button } from 'antd';\n\nconst oldCode = `\nconst a = 10\nconst b = 10\nconst c = () => console.log('foo')\n \nif(a > 10) {\n  console.log('bar')\n}\n \nconsole.log('done')\n`\nconst newCode = `\nconst a = 10\nconst boo = 10\n \nif(a === 10) {\n  console.log('bar')\n}\n`\n\n\nconst cloneCodeA = `\n\"\"\"\nAuto-generated class for GW\n\"\"\"\nfrom .GWNIC import GWNIC\nfrom .HTTPProxy import HTTPProxy\nfrom .PortForward import PortForward\n\nfrom . import client_support\n\n\nclass GW(object):\n    \"\"\"\n    auto-generated. don't touch.\n    \"\"\"\n\n    @staticmethod\n    def create(domain, nics, httpproxies=None, portforwards=None):\n        \"\"\"\n        :type domain: str\n        :type httpproxies: list[HTTPProxy]\n        :type nics: list[GWNIC]\n        :type portforwards: list[PortForward]\n        :rtype: GW\n        \"\"\"\n\n        return GW(\n            domain=domain,\n            httpproxies=httpproxies,\n            nics=nics,\n            portforwards=portforwards,\n        )\n\n    def __init__(self, json=None, **kwargs):\n        if json is None and not kwargs:\n            raise ValueError('No data or kwargs present')\n\n        class_name = 'GW'\n        create_error = '{cls}: unable to create {prop} from value: {val}: {err}'\n        required_error = '{cls}: missing required property {prop}'\n\n        data = json or kwargs\n\n        property_name = 'domain'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [str]\n            try:\n                self.domain = client_support.val_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n        else:\n            raise ValueError(required_error.format(cls=class_name, prop=property_name))\n\n        property_name = 'httpproxies'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [HTTPProxy]\n            try:\n                self.httpproxies = client_support.list_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n\n        property_name = 'nics'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [GWNIC]\n            try:\n                self.nics = client_support.list_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n        else:\n            raise ValueError(required_error.format(cls=class_name, prop=property_name))\n\n        property_name = 'portforwards'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [PortForward]\n            try:\n                self.portforwards = client_support.list_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n\n    def __str__(self):\n        return self.as_json(indent=4)\n\n    def as_json(self, indent=0):\n        return client_support.to_json(self, indent=indent)\n\n    def as_dict(self):\n        return client_support.to_dict(self)\n'\n`;\nconst StudentCodeA = `\n\"\"\"\nAuto-generated class for GWCreate\n\"\"\"\nfrom .GWNIC import GWNIC\nfrom .HTTPProxy import HTTPProxy\nfrom .PortForward import PortForward\n\nfrom . import client_support\n\n\nclass GWCreate(object):\n    \"\"\"\n    auto-generated. don't touch.\n    \"\"\"\n\n    @staticmethod\n    def create(domain, name, nics, httpproxies=None, portforwards=None):\n        \"\"\"\n        :type domain: str\n        :type httpproxies: list[HTTPProxy]\n        :type name: str\n        :type nics: list[GWNIC]\n        :type portforwards: list[PortForward]\n        :rtype: GWCreate\n        \"\"\"\n\n        return GWCreate(\n            domain=domain,\n            httpproxies=httpproxies,\n            name=name,\n            nics=nics,\n            portforwards=portforwards,\n        )\n\n    def __init__(self, json=None, **kwargs):\n        if json is None and not kwargs:\n            raise ValueError('No data or kwargs present')\n\n        class_name = 'GWCreate'\n        create_error = '{cls}: unable to create {prop} from value: {val}: {err}'\n        required_error = '{cls}: missing required property {prop}'\n\n        data = json or kwargs\n\n        property_name = 'domain'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [str]\n            try:\n                self.domain = client_support.val_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n        else:\n            raise ValueError(required_error.format(cls=class_name, prop=property_name))\n\n        property_name = 'httpproxies'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [HTTPProxy]\n            try:\n                self.httpproxies = client_support.list_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n\n        property_name = 'name'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [str]\n            try:\n                self.name = client_support.val_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n        else:\n            raise ValueError(required_error.format(cls=class_name, prop=property_name))\n\n        property_name = 'nics'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [GWNIC]\n            try:\n                self.nics = client_support.list_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n        else:\n            raise ValueError(required_error.format(cls=class_name, prop=property_name))\n\n        property_name = 'portforwards'\n        val = data.get(property_name)\n        if val is not None:\n            datatypes = [PortForward]\n            try:\n                self.portforwards = client_support.list_factory(val, datatypes)\n            except ValueError as err:\n                raise ValueError(create_error.format(cls=class_name, prop=property_name, val=val, err=err))\n\n    def __str__(self):\n        return self.as_json(indent=4)\n\n    def as_json(self, indent=0):\n        return client_support.to_json(self, indent=indent)\n\n    def as_dict(self):\n        return client_support.to_dict(self)\n'\n`;\n\nexport default class DiffView extends PureComponent {\n    render = () => {\n        return (\n            <ReactDiffViewer\n                oldValue={cloneCodeA}\n                newValue={StudentCodeA}\n                splitView={true}\n            />\n        )\n    }\n}","import React, { Component } from 'react';\nimport LoginComponent from  \"./Components/LoginComponent\"\nimport AddAssignmentPopUp from \"./Components/AddAssignmentPopUp\"\nimport './App.css';\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport MUIDataTable from \"mui-datatables\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport ValidateTokensPopUp from \"./Components/ValidateTokensPopUp\";\nimport {Assignment} from \"./Objects/Assignment\";\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport SimpleExpansionPanel from \"./Components/ExpansionPanelCustom\"\nimport AntAccordion from \"./Components/AntAccordion\"\nimport {Avatar} from \"antd\";\nimport CustomToolbar from \"./Components/CustomToolbar\";\nimport SignIn from \"./Components/SignIn\"\nimport StudentSubmission from \"./Components/StudentSubmission\";\nimport DiffView from \"./Components/DiffView\"\nimport Button from \"react-bootstrap/es/Button\";\n\nconst columns = [\n  { name: 'Assignment Name',\n    options: {\n      filter: false\n    }\n  },\n  { name: 'Submissions Received',\n    options: {\n      filter: false\n    }\n  },\n  { name: 'Date Created',\n    options: {\n      sortDirection: 'asc',\n      filter:false\n    }\n  },\n  { name: 'Programming Language' },\n];\n\nconst Assignmentcolumns = [\n  { name: 'StudentID',\n    options: {\n      filter: false\n    }\n  },\n  { name: 'Status' ,\n    options: {\n      filter: false,\n      sort: false,\n    }\n  },\n  { name: 'Number of Clones',\n    options: {\n      sortDirection: 'asc',\n      filter: false,\n    }\n  },\n  { name: 'Validated' },\n];\n\n//general code fetched from https://www.material-ui-datatables.com/ on April 20th, 2019\nclass App extends Component {\n\n  //solution by Abhinav Chandra fetched from https://stackoverflow.com/a/54754427/7520564 on April 20th 2019\n  getCurrentDate(separator='-'){\n\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date}`\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [\n        ['CMPUT 201 A1', 2, \"2019-03-24\", \"C\"],\n        ['CMPUT 201 A2', 452, \"2019-04-01\", \"C\"],\n        ['CMPUT 391 A1', 262, \"2018-06-12\", \"Java\"],\n        ['CMPUT 304 A1', 159, \"2020-12-13\", \"C\"],\n        ['CMPUT 201 A3', 356, \"2019-05-29\", \"C\"],\n        ['CMPUT 201 A4', 408, \"2019-06-01\", \"C\"],\n        ['CMPUT 391 A2', 237, \"2018-07-11\", \"Java\"],\n        ['CMPUT 391 A3', 375, \"2018-08-17\", \"Java\"],\n        ['CMPUT 304 A2', 518, \"2021-01-13\", \"C\"],\n        ['CMPUT 391 A4', 392, \"2018-09-12\", \"Java\"],\n        ['CMPUT 304 A3', 318, \"2021-02-01\", \"C\"],\n        ['CMPUT 304 A4', 360, \"2021-02-13\", \"C\"],\n        ['CMPUT 304 A5', 437, \"2021-02-24\", \"C\"],\n      ],\n\n      AssignmentData: [\n      ['jsmith', <Avatar src=\"https://previews.123rf.com/images/mironovkonstantin/mironovkonstantin1804/mironovkonstantin180400089/99452926-attention-caution-danger-icon-exclamination-point-mark-in-the-red-triangle-sign-symbol-or-sticker-el.jpg\"/>, 1000000, \"true\"],\n      ['kpaisley', false, 150, \"false\"]\n      ],\n\n      AssignmentOptions: {\n        selectableRows: false,\n        print:false,\n        rowsPerPage:50,\n        //custom footer solution by DTupalov from https://github.com/gregnb/mui-datatables/issues/265\n        //fetched on April 20th, 2019\n        customFooter: (count, page, rowsPerPage, changeRowsPerPage, changePage) => {\n\n          //my work around a bug of the rowsPerPage not being maintained after an assignment is added\n          if (this.state.AssignmentOptions.rowsPerPage !== rowsPerPage) {\n            var options = {...this.state.AssignmentOptions};\n            options.rowsPerPage = rowsPerPage;\n            this.setState({AssignmentOptions : options});\n          }\n\n          return (\n              <TableFooter>\n                <TableRow>\n                  <ValidateTokensPopUp/>\n                  <TablePagination\n                      count={count}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onChangePage={(_, page) => changePage(page)}\n                      onChangeRowsPerPage={event => changeRowsPerPage(event.target.value)}\n                      rowsPerPageOptions={[5, 10, 15, 25, 50, 100]}\n                  />\n                </TableRow>\n              </TableFooter>\n          );\n        }\n      },\n\n      //functional options by taochen48 from https://github.com/gregnb/mui-datatables/issues/116 fetched on April 20th, 2019\n      options: {\n        print:false,\n        onRowsSelect: (rowsSelected, allRows) => {\n          console.log(rowsSelected, allRows);\n        },\n        onRowsDelete: rowsDeleted => {\n          console.log(rowsDeleted, \"were deleted!\");\n        },\n        onChangePage: numberRows => {\n          console.log(numberRows);\n        },\n        onSearchChange: searchText => {\n          console.log(searchText);\n        },\n        onColumnSortChange: (column, direction) => {\n          console.log(column, direction);\n        },\n        onColumnViewChange: (column, action) => {\n          console.log(column, action);\n        },\n        onFilterChange: (column, filters) => {\n          console.log(column, filters);\n        },\n        onCellClick: (cellIndex, rowIndex) => {\n          console.log(cellIndex, rowIndex);\n        },\n        customToolbar:  () => <CustomToolbar PassUpPopUpInformation={this.PassUpPopUpInformation} />,\n\n        rowsPerPage:10,\n        //custom footer solution by DTupalov from https://github.com/gregnb/mui-datatables/issues/265\n        //fetched on April 20th, 2019\n        customFooter: (count, page, rowsPerPage, changeRowsPerPage, changePage) => {\n\n          //my work around a bug of the rowsPerPage not being maintained after an assignment is added\n          if (this.state.options.rowsPerPage !== rowsPerPage) {\n            var options = {...this.state.options};\n            options.rowsPerPage = rowsPerPage;\n            this.setState({options : options});\n          }\n\n          return (\n              <TableFooter>\n                <TableRow>\n                  <TablePagination\n                      count={count}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onChangePage={(_, page) => changePage(page)}\n                      onChangeRowsPerPage={event => changeRowsPerPage(event.target.value)}\n                      rowsPerPageOptions={[5, 10, 15, 25, 50, 100]}\n                  />\n                </TableRow>\n              </TableFooter>\n          );\n        }\n      }\n    };\n  }\n\n  showState = () => {\n    console.log(this.state);\n  };\n\n  //add the new assignment created in the pop up to the table\n  PassUpPopUpInformation = (AssignmentName, ProgrammingLanguage) => {\n    //this approach was shown by David Hellsing in https://stackoverflow.com/a/26254086/7520564 to avoid race conditions\n    //fetched April 20th, 2019\n    this.setState(prevState => ({\n      data: [...prevState.data, [AssignmentName, 0, this.getCurrentDate(), ProgrammingLanguage]]\n    }))\n  };\n\n  render() {\n    return (\n        <div>\n          <AntAccordion/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n        <div>\n\n\n          <StudentSubmission/>\n          <SignIn/>\n          <MUIDataTable\n              title={\"Welcome Professor Lu\"}\n              data={this.state.data}\n              columns={columns}\n              options={this.state.options}\n\n          />\n          <MUIDataTable\n              title={\n                <div>\n                  <h3>CMPUT 201 A1</h3>\n                  <h6>Submissions received : 2</h6>\n                  <h6>Date created: 2019-03-24</h6>\n                  <h6>Student Submission link: http://Fantasia/5aec-96b3-1135-96e2</h6>\n                </div>\n              }\n              data={this.state.AssignmentData}\n              columns={Assignmentcolumns}\n              options={this.state.AssignmentOptions}\n          />\n          <AntAccordion/>\n          <DiffView/>\n        </div>\n\n\n\n\n */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}